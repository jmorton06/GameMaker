<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayerWalkEast</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialise Variables

enum gun
{
    rifle,
    pistol,
    shotgun
}

equipped = gun.rifle;
primary = gun.rifle;
secondary = gun.pistol;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle Movement and Collisions

if (keyboard_check(ord("W")))
{
    if(place_meeting(x,y-4,objWall))
    {
        while(!place_meeting(x,y-1,objWall))
        {
            y--;
        }
    }
    else
    {
      y -= 4;
    }
}
if (keyboard_check(ord("A")))
{
    if(place_meeting(x-4,y,objWall))
    {
        while(!place_meeting(x-1,y,objWall))
        {
            x--;
        }
    }
    else
    {
        x -= 4;
    }
}
if (keyboard_check(ord("S")))
{
    if(place_meeting(x,y+4,objWall))
    {
        while(!place_meeting(x,y+1,objWall))
        {
            y++;
        }
    }
    else
    {
        y += 4;
    }
}
if (keyboard_check(ord("D")))
{
    if(place_meeting(x+4,y,objWall))
    {
        while(!place_meeting(x+1,y,objWall))
        {
            x++;
        }
    }
    else
    {
        x += 4;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Swap Weapons

if(keyboard_check_pressed(ord('Q')))
{
    if(equipped == primary)
        equipped = secondary;
    else
        equipped = primary;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shoot
if(mouse_check_button_pressed(mb_left))
{
    if(equipped == gun.rifle)
     instance_create(x,y, objBullet);
    else if( equipped == gun.pistol)
     instance_create(x,y,objPistolBullet);
    else if( equipped == gun.shotgun)
     instance_create(x,y,objShotgunBullet);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pickup Weapon

if(keyboard_check_pressed(ord('E')))
{
    if( point_distance(x,y, objPickup.x + 16, objPickup.y + 16) &lt; 40)
    {
        if(secondary == -1)
            secondary = objPickUp.name;
        
        else
        {
            if(equipped == primary)
                primary = objPickUp.name;
            else
                secondary = objPickUp.name;
            
            var temp = objPickUp.name;
            equipped = objPickUp.name;
            
            objPickUp.name = temp;
     
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Angled

var angle = point_direction(x,y,mouse_x,mouse_y);

draw_sprite_ext(sprPlayerWalkEast, 0, x,y, 1,1 , angle, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
